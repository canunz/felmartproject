<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gesti√≥n de Clientes | Felmart</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    
    <style>
        :root {
            /* Navigation colors - Exactos del cliente.ejs */
            --nav-primary-color: #00616e;
            --nav-primary-dark: #004d57;
            --nav-primary-light: #00818f;
            --nav-secondary-color: #6c757d;
            --nav-white: #ffffff;
            --nav-shadow: 0 4px 20px rgba(0,0,0,0.08);
            --nav-transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            
            /* Dashboard colors */
            --success-color: #28a745;
            --warning-color: #ffc107;
            --danger-color: #dc3545;
            --info-color: #17a2b8;
            --purple-color: #6f42c1;
            --orange-color: #fd7e14;
            --light-bg: #f8f9fa;
            --border-radius: 12px;
            --shadow: 0 2px 12px rgba(0,0,0,0.08);
            --shadow-hover: 0 4px 20px rgba(0,0,0,0.12);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', sans-serif;
            background-color: var(--light-bg);
            line-height: 1.6;
        }

        /* Header Navigation - Exacto del cliente.ejs */
        .header-nav {
            background: var(--nav-white);
            box-shadow: var(--nav-shadow);
            padding: 1rem 0;
            position: sticky;
            top: 0;
            z-index: 1000;
        }

        .nav-container {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0;
        }

        .logo-section {
            display: flex;
            align-items: center;
            text-decoration: none;
        }

        .logo-icon {
            width: 40px;
            height: 40px;
            background: linear-gradient(135deg, var(--nav-primary-color), var(--nav-primary-light));
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 12px;
            color: white;
            font-size: 1.2rem;
        }

        .logo-text {
            font-size: 1.5rem;
            font-weight: 700;
            color: var(--nav-primary-color);
        }

        .nav-menu {
            display: flex;
            align-items: center;
            gap: 0;
            margin: 0;
            padding: 0;
            list-style: none;
        }

        .nav-item {
            display: flex;
            align-items: center;
        }

        .nav-link {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 0.5rem 1rem;
            color: var(--nav-secondary-color);
            text-decoration: none;
            border-radius: 8px;
            transition: var(--nav-transition);
            font-weight: 500;
            position: relative;
        }

        .nav-link:hover,
        .nav-link.active {
            color: var(--nav-primary-color);
            background: rgba(0, 97, 110, 0.05);
        }

        .nav-link i {
            font-size: 16px;
        }

        /* User Area - Modificado para incluir notificaciones */
        .user-area {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        /* Campanita de Notificaciones - Estilo sutil */
        .notification-bell {
            position: relative;
            background: transparent;
            border: 1px solid rgba(0, 97, 110, 0.2);
            color: var(--nav-secondary-color);
            padding: 0.5rem;
            border-radius: 8px;
            cursor: pointer;
            transition: var(--nav-transition);
            display: flex;
            align-items: center;
            justify-content: center;
            width: 40px;
            height: 40px;
        }

        .notification-bell:hover {
            color: var(--nav-primary-color);
            border-color: var(--nav-primary-color);
            background: rgba(0, 97, 110, 0.05);
        }

        .notification-badge {
            position: absolute;
            top: -5px;
            right: -5px;
            background: var(--danger-color);
            color: white;
            border-radius: 50%;
            width: 18px;
            height: 18px;
            font-size: 0.7rem;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            border: 2px solid var(--nav-white);
        }

        .user-dropdown {
            position: relative;
        }

        .user-btn {
            background: linear-gradient(135deg, var(--nav-primary-color), var(--nav-primary-light));
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 50px;
            display: flex;
            align-items: center;
            gap: 8px;
            font-weight: 500;
            cursor: pointer;
            transition: var(--nav-transition);
        }

        .user-btn:hover {
            background: linear-gradient(135deg, var(--nav-primary-dark), var(--nav-primary-color));
        }

        .dropdown-menu {
            position: absolute;
            top: calc(100% + 8px);
            right: 0;
            background: var(--nav-white);
            border: none;
            border-radius: 12px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
            min-width: 200px;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.2s;
            z-index: 1000;
            padding: 0.5rem;
            margin-top: 0.5rem;
        }

        .dropdown-menu.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .dropdown-item {
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 0.75rem 1rem;
            color: var(--nav-primary-color);
            text-decoration: none;
            transition: var(--nav-transition);
            font-size: 14px;
            border-radius: 8px;
            margin: 0.25rem 0;
            font-weight: 500;
        }

        .dropdown-item:hover {
            background: rgba(0, 97, 110, 0.05);
            color: var(--nav-primary-color);
            transform: translateX(5px);
        }

        .dropdown-item.text-danger {
            color: var(--danger-color) !important;
        }

        .dropdown-item.text-danger:hover {
            background: rgba(220, 53, 69, 0.1);
            color: var(--danger-color) !important;
        }

        .dropdown-item i {
            width: 20px;
            text-align: center;
        }

        /* Dropdown de Notificaciones - ARRIBA del usuario */
        .notification-dropdown {
            position: absolute;
            top: calc(100% + 8px);
            right: 0;
            background: var(--nav-white);
            border-radius: 12px;
            box-shadow: 0 10px 40px rgba(0, 0, 0, 0.15);
            width: 300px;
            opacity: 0;
            visibility: hidden;
            transform: translateY(-10px);
            transition: all 0.2s;
            z-index: 1001; /* Mayor que el dropdown del usuario */
            border: 1px solid #e2e8f0;
            max-height: 400px;
            overflow-y: auto;
        }

        .notification-dropdown.show {
            opacity: 1;
            visibility: visible;
            transform: translateY(0);
        }

        .notification-header {
            padding: 1rem 1.25rem;
            border-bottom: 1px solid #e2e8f0;
            background: var(--light-bg);
            border-radius: 12px 12px 0 0;
            position: sticky;
            top: 0;
            z-index: 1;
        }

        .notification-title {
            font-weight: 600;
            color: var(--nav-primary-color);
            margin: 0;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .notification-item {
            padding: 1rem 1.25rem;
            border-bottom: 1px solid #f1f3f4;
            transition: all 0.2s ease;
            cursor: pointer;
        }

        .notification-item:hover {
            background: var(--light-bg);
        }

        .notification-item:last-child {
            border-bottom: none;
        }

        .notification-item.unread {
            background: rgba(0, 97, 110, 0.02);
            border-left: 3px solid var(--nav-primary-color);
        }

        .notification-text {
            font-size: 0.85rem;
            font-weight: 600;
            color: var(--nav-primary-color);
            margin: 0 0 0.25rem 0;
        }

        .notification-desc {
            font-size: 0.75rem;
            color: var(--nav-secondary-color);
            margin: 0 0 0.5rem 0;
            line-height: 1.4;
        }

        .notification-time {
            font-size: 0.7rem;
            color: var(--nav-secondary-color);
            font-style: italic;
        }

        /* Content Wrapper */
        .content-wrapper {
            padding: 2rem 1.5rem;
            max-width: 1400px;
            margin: 0 auto;
        }

        /* Page Header */
        .page-header {
            background: var(--nav-white);
            border-radius: var(--border-radius);
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: var(--shadow);
            border: 1px solid #e2e8f0;
        }

        .page-title {
            font-size: 2rem;
            font-weight: 700;
            color: var(--nav-primary-color);
            margin-bottom: 0.5rem;
        }

        .breadcrumb {
            background: none;
            padding: 0;
            margin: 0;
            font-size: 0.875rem;
        }

        .breadcrumb-item {
            color: var(--nav-secondary-color);
        }

        .breadcrumb-item.active {
            color: var(--nav-secondary-color);
            opacity: 0.7;
        }

        .breadcrumb-item a {
            color: var(--nav-primary-color);
            text-decoration: none;
            transition: all 0.2s ease;
        }

        .breadcrumb-item a:hover {
            color: var(--nav-primary-dark);
        }

        /* Bot√≥n Principal */
        .btn-primary {
            background: linear-gradient(135deg, var(--nav-primary-color), var(--nav-primary-light));
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: var(--border-radius);
            font-weight: 600;
            font-size: 0.875rem;
            transition: all 0.2s ease;
            box-shadow: var(--shadow);
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, var(--nav-primary-dark), var(--nav-primary-color));
            transform: translateY(-1px);
            box-shadow: var(--shadow-hover);
        }

        /* Card Principal */
        .card {
            background: var(--nav-white);
            border: 1px solid #e2e8f0;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow);
            overflow: hidden;
        }

        .card-body {
            padding: 0;
        }

        /* Tabla */
        .table-responsive {
            border-radius: var(--border-radius);
            overflow: hidden;
        }

        .table {
            margin: 0;
        }

        .table thead th {
            background: var(--light-bg);
            border: none;
            padding: 1.25rem 1.5rem;
            font-weight: 600;
            color: var(--nav-primary-color);
            font-size: 0.8rem;
            text-transform: uppercase;
            letter-spacing: 0.05em;
        }

        .table tbody td {
            padding: 1.25rem 1.5rem;
            vertical-align: middle;
            border-bottom: 1px solid #f1f3f4;
            color: var(--nav-secondary-color);
            font-size: 0.875rem;
            font-weight: 500;
        }

        .table tbody tr {
            transition: all 0.2s ease;
        }

        .table tbody tr:hover {
            background: var(--light-bg);
        }

        .table tbody tr:last-child td {
            border-bottom: none;
        }

        /* Botones de Acci√≥n */
        .btn-group {
            gap: 0.5rem;
        }

        .btn-info {
            background: var(--info-color);
            border: none;
            color: white;
            padding: 0.5rem 0.75rem;
            border-radius: 6px;
            font-size: 0.875rem;
            transition: all 0.2s ease;
        }

        .btn-info:hover {
            background: #138496;
            color: white;
            transform: translateY(-1px);
        }

        .btn-danger {
            background: var(--danger-color);
            border: none;
            color: white;
            padding: 0.5rem 0.75rem;
            border-radius: 6px;
            font-size: 0.875rem;
            transition: all 0.2s ease;
        }

        .btn-danger:hover {
            background: #c82333;
            color: white;
            transform: translateY(-1px);
        }

        /* Modal Mejorado */
        .modal-content {
            border: none;
            border-radius: 16px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
            overflow: hidden;
        }

        .modal-header {
            background: linear-gradient(135deg, var(--nav-primary-color), var(--nav-primary-light));
            color: white;
            border-bottom: none;
            padding: 1.5rem 2rem;
        }

        .modal-title {
            font-weight: 700;
            font-size: 1.25rem;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .btn-close {
            filter: invert(1);
            opacity: 0.8;
        }

        .btn-close:hover {
            opacity: 1;
        }

        .modal-body {
            padding: 2rem;
            background: #fafbfc;
        }

        .modal-footer {
            background: var(--nav-white);
            border-top: 1px solid #e2e8f0;
            padding: 1.5rem 2rem;
            gap: 1rem;
        }

        /* Form Controls Mejorados */
        .form-label {
            font-weight: 600;
            color: var(--nav-primary-color);
            margin-bottom: 0.75rem;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .form-label i {
            color: var(--nav-primary-light);
            font-size: 0.9rem;
        }

        .form-control {
            border: 2px solid #e1e5e9;
            border-radius: 10px;
            padding: 0.875rem 1.125rem;
            font-size: 0.9rem;
            transition: all 0.3s ease;
            background: var(--nav-white);
            font-weight: 500;
        }

        .form-control:focus {
            border-color: var(--nav-primary-color);
            box-shadow: 0 0 0 4px rgba(0, 97, 110, 0.1);
            outline: none;
            transform: translateY(-1px);
        }

        .form-control::placeholder {
            color: #9ca3af;
            font-weight: 400;
        }

        .invalid-feedback {
            font-size: 0.8rem;
            margin-top: 0.5rem;
            font-weight: 500;
        }

        .btn-secondary {
            background: #6c757d;
            border: none;
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 10px;
            font-weight: 600;
            transition: all 0.2s ease;
        }

        .btn-secondary:hover {
            background: #5a6268;
            color: white;
            transform: translateY(-1px);
        }

        /* Toast */
        .toast {
            border: none;
            border-radius: var(--border-radius);
            box-shadow: var(--shadow-hover);
        }

        .toast-header {
            background: var(--light-bg);
            border-bottom: 1px solid #e2e8f0;
            font-weight: 600;
        }

        .toast-body {
            background: var(--nav-white);
            color: var(--nav-primary-color);
            font-weight: 500;
        }

        /* Responsive */
        @media (max-width: 768px) {
            .nav-menu {
                display: none;
            }

            .content-wrapper {
                padding: 1rem;
            }

            .page-header {
                padding: 1.5rem;
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }

            .page-title {
                font-size: 1.5rem;
            }

            .table thead th,
            .table tbody td {
                padding: 1rem;
                font-size: 0.8rem;
            }

            .notification-dropdown {
                width: 280px;
                right: -50px;
            }

            .modal-body {
                padding: 1.5rem;
            }

            .modal-header {
                padding: 1.25rem 1.5rem;
            }

            .modal-footer {
                padding: 1.25rem 1.5rem;
            }
        }
    </style>
</head>
<body>
    <header class="header-nav">
        <div class="container-fluid px-4">
            <div class="nav-container">
                <a href="/" class="logo-section">
                    <div class="logo-icon">
                        <i class="fas fa-recycle"></i>
                    </div>
                    <span class="logo-text">Felmart</span>
                </a>
                <nav>
                    <ul class="nav-menu">
                        <li class="nav-item">
                            <a href="/dashboard" class="nav-link">
                                <i class="fas fa-home"></i>
                                <span>Inicio</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/admin/clientes" class="nav-link active">
                                <i class="fas fa-users"></i>
                                <span>Clientes</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/admin/cotizaciones" class="nav-link">
                                <i class="fas fa-file-invoice"></i>
                                <span>Cotizaciones</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/admin/solicitudes" class="nav-link">
                                <i class="fas fa-file-alt"></i>
                                <span>Solicitudes</span>
                            </a>
                        </li>
                        <li class="nav-item">
                            <a href="/admin/visitas" class="nav-link">
                                <i class="fas fa-calendar-check"></i>
                                <span>Visitas</span>
                            </a>
                        </li>
                    </ul>
                </nav>
                <div class="user-area">
                    <div class="position-relative">
                        <button class="notification-bell" id="notificationBell">
                            <i class="fas fa-bell"></i>
                            <span class="notification-badge" id="notificationBadge">2</span>
                        </button>
                        <div class="notification-dropdown" id="notificationDropdown">
                            <div class="notification-header">
                                <div class="notification-title">
                                    <i class="fas fa-bell"></i>Notificaciones
                                </div>
                            </div>
                            <div class="notification-item unread">
                                <div class="notification-text">Nuevo cliente registrado</div>
                                <div class="notification-desc">Se ha agregado un nuevo cliente</div>
                                <div class="notification-time">Hace 10 minutos</div>
                            </div>
                            <div class="notification-item unread">
                                <div class="notification-text">Cliente actualizado</div>
                                <div class="notification-desc">Se modificaron los datos de un cliente</div>
                                <div class="notification-time">Hace 1 hora</div>
                            </div>
                        </div>
                    </div>
                    <div class="user-dropdown">
                        <button class="user-btn" id="adminDropdownBtn" type="button">
                            <i class="fas fa-user-shield"></i>
                            <span>Administrador</span>
                            <i class="fas fa-chevron-down"></i>
                        </button>
                        <div class="dropdown-menu" id="adminDropdownMenu">
                            <a href="/admin/perfil" class="dropdown-item">
                                <i class="fas fa-user"></i> Mi Perfil
                            </a>
                            <a href="/admin/notificaciones" class="dropdown-item">
                                <i class="fas fa-bell"></i> Notificaciones
                            </a>
                            <a href="/admin/configuracion" class="dropdown-item">
                                <i class="fas fa-cog"></i> Configuraci√≥n
                            </a>
                            <div style="border-top: 1px solid #e9ecef; margin: 0.5rem 0;"></div>
                            <a href="/" class="dropdown-item">
                                <i class="fas fa-home"></i> Volver al Inicio
                            </a>
                            <a href="/logout" class="dropdown-item text-danger">
                                <i class="fas fa-sign-out-alt"></i> Cerrar Sesi√≥n
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>
    <div class="content-wrapper">
        <div class="page-header d-flex justify-content-between align-items-center">
            <div>
                <h1 class="page-title">Gesti√≥n de Clientes</h1>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/dashboard">Inicio</a></li>
                        <li class="breadcrumb-item active">Clientes</li>
                    </ol>
                </nav>
            </div>
            <button class="btn btn-primary" onclick="mostrarModalCrear()">
                <i class="fas fa-plus me-2"></i>Nuevo Cliente
            </button>
        </div>
        <div class="card">
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>RUT</th>
                                <th>EMPRESA</th>
                                <th>EMAIL</th>
                                <th>TEL√âFONO</th>
                                <th>CONTACTO</th>
                                <th>CIUDAD</th>
                                <th>ACCIONES</th>
                            </tr>
                        </thead>
                        <tbody id="clientesTableBody">
                            <!-- Los datos se cargar√°n aqu√≠ din√°micamente -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- Modal para Crear/Editar Cliente -->
    <div class="modal fade" id="clienteModal" tabindex="-1">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">
                        <i class="fas fa-plus-circle"></i>Nuevo Cliente
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="clienteForm" class="needs-validation" novalidate>
                        <input type="hidden" id="clienteId">
                        <div class="row g-4">
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-id-card"></i>RUT Empresa
                                </label>
                                <input type="text" class="form-control" id="rut" required placeholder="76.123.456-7">
                                <div class="invalid-feedback">Ingrese un RUT v√°lido</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-building"></i>Nombre Empresa
                                </label>
                                <input type="text" class="form-control" id="nombre_empresa" required placeholder="Raz√≥n social completa">
                                <div class="invalid-feedback">Ingrese el nombre de la empresa</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-envelope"></i>Email Corporativo
                                </label>
                                <input type="email" class="form-control" id="email" required placeholder="contacto@empresa.cl">
                                <div class="invalid-feedback">Ingrese un email v√°lido</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-phone"></i>Tel√©fono
                                </label>
                                <input type="tel" class="form-control" id="telefono" required placeholder="+56 9 1234 5678">
                                <div class="invalid-feedback">Ingrese un tel√©fono v√°lido</div>
                            </div>
                            <div class="col-12">
                                <label class="form-label">
                                    <i class="fas fa-user-tie"></i>Contacto Principal
                                </label>
                                <input type="text" class="form-control" id="contacto_principal" required placeholder="Nombre completo del contacto">
                                <div class="invalid-feedback">Ingrese el nombre del contacto</div>
                            </div>
                            <div class="col-12">
                                <label class="form-label">
                                    <i class="fas fa-map-marker-alt"></i>Direcci√≥n
                                </label>
                                <input type="text" class="form-control" id="direccion" required placeholder="Direcci√≥n completa con n√∫mero">
                                <div class="invalid-feedback">Ingrese la direcci√≥n</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-map"></i>Comuna
                                </label>
                                <input type="text" class="form-control" id="comuna" required placeholder="Comuna de ubicaci√≥n">
                                <div class="invalid-feedback">Ingrese la comuna</div>
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">
                                    <i class="fas fa-city"></i>Ciudad
                                </label>
                                <input type="text" class="form-control" id="ciudad" required placeholder="Ciudad">
                                <div class="invalid-feedback">Ingrese la ciudad</div>
                            </div>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        <i class="fas fa-times me-2"></i>Cancelar
                    </button>
                    <button type="button" class="btn btn-primary" onclick="guardarCliente()">
                        <i class="fas fa-save me-2"></i>Guardar Cliente
                    </button>
                </div>
            </div>
        </div>
    </div>
    <!-- Toast para notificaciones -->
    <div class="toast-container position-fixed top-0 end-0 p-3">
        <div id="notificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header">
                <i class="fas fa-info-circle me-2"></i>
                <strong class="me-auto">Notificaci√≥n</strong>
                <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
            </div>
            <div class="toast-body"></div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        let clienteModal;
        let notificationToast;

        // Inicializaci√≥n
        document.addEventListener('DOMContentLoaded', function() {
            clienteModal = new bootstrap.Modal(document.getElementById('clienteModal'));
            notificationToast = new bootstrap.Toast(document.getElementById('notificationToast'));
            cargarClientes();
            cargarNotificacionesReales();
            
            // Dropdown functionality para usuario
            const dropdownBtn = document.getElementById('adminDropdownBtn');
            const dropdownMenu = document.getElementById('adminDropdownMenu');
            
            dropdownBtn.addEventListener('click', function(e) {
                e.stopPropagation();
                dropdownMenu.classList.toggle('show');
                // Cerrar notificaciones si est√°n abiertas
                document.getElementById('notificationDropdown').classList.remove('show');
            });

            // Dropdown functionality para notificaciones
            const notificationBell = document.getElementById('notificationBell');
            const notificationDropdown = document.getElementById('notificationDropdown');
            
            notificationBell.addEventListener('click', function(e) {
                e.stopPropagation();
                notificationDropdown.classList.toggle('show');
                // Cerrar dropdown de usuario si est√° abierto
                dropdownMenu.classList.remove('show');
                
                // Marcar notificaciones como le√≠das al abrir
                if (notificationDropdown.classList.contains('show')) {
                    marcarNotificacionesComoLeidas();
                }
            });
            
            // Cerrar dropdowns al hacer clic fuera
            document.addEventListener('click', function(e) {
                if (!dropdownBtn.contains(e.target) && !dropdownMenu.contains(e.target)) {
                    dropdownMenu.classList.remove('show');
                }
                if (!notificationBell.contains(e.target) && !notificationDropdown.contains(e.target)) {
                    notificationDropdown.classList.remove('show');
                }
            });
        });

        // Cargar notificaciones reales
        async function cargarNotificacionesReales() {
            try {
                // Aqu√≠ har√≠as la llamada real a tu API de notificaciones
                // const response = await fetch('/api/notificaciones');
                // const data = await response.json();
                
                // Por ahora simulo que hay 2 notificaciones no le√≠das
                actualizarBadgeNotificaciones(2);
                
                // Cada 30 segundos verificar nuevas notificaciones
                setInterval(verificarNuevasNotificaciones, 30000);
            } catch (error) {
                console.error('Error al cargar notificaciones:', error);
            }
        }

        // Verificar nuevas notificaciones
        async function verificarNuevasNotificaciones() {
            try {
                // Aqu√≠ har√≠as la llamada real a tu API
                // const response = await fetch('/api/notificaciones/count');
                // const data = await response.json();
                // actualizarBadgeNotificaciones(data.count);
            } catch (error) {
                console.error('Error al verificar notificaciones:', error);
            }
        }

        // Actualizar badge de notificaciones
        function actualizarBadgeNotificaciones(count) {
            const badge = document.getElementById('notificationBadge');
            if (count > 0) {
                badge.textContent = count;
                badge.style.display = 'flex';
            } else {
                badge.style.display = 'none';
            }
        }

        // Marcar notificaciones como le√≠das
        async function marcarNotificacionesComoLeidas() {
            try {
                // Aqu√≠ har√≠as la llamada real a tu API
                // await fetch('/api/notificaciones/marcar-leidas', { method: 'POST' });
                
                // Remover clases unread de las notificaciones
                const unreadItems = document.querySelectorAll('.notification-item.unread');
                unreadItems.forEach(item => {
                    item.classList.remove('unread');
                });
                
                // Actualizar badge
                actualizarBadgeNotificaciones(0);
            } catch (error) {
                console.error('Error al marcar notificaciones como le√≠das:', error);
            }
        }

        // Cargar clientes
        async function cargarClientes() {
            try {
                const response = await fetch('/api/clientes');
                const data = await response.json();
                
                if (data.success) {
                    const tbody = document.getElementById('clientesTableBody');
                    tbody.innerHTML = '';
                    
                    if (data.clientes.length === 0) {
                        tbody.innerHTML = `
                            <tr>
                                <td colspan="7" class="text-center py-5">
                                    <div class="empty-state">
                                        <i class="fas fa-building fa-3x mb-3" style="opacity: 0.3;"></i>
                                        <h5>No hay clientes registrados</h5>
                                        <p class="text-muted">Comienza agregando tu primer cliente</p>
                                    </div>
                                </td>
                            </tr>
                        `;
                    } else {
                        data.clientes.forEach(cliente => {
                            tbody.innerHTML += `
                                <tr>
                                    <td><strong>${cliente.rut}</strong></td>
                                    <td><strong>${cliente.nombre_empresa}</strong></td>
                                    <td>${cliente.email}</td>
                                    <td>${cliente.telefono}</td>
                                    <td>${cliente.contacto_principal}</td>
                                    <td>${cliente.ciudad}</td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button class="btn btn-info btn-sm" onclick="editarCliente(${cliente.id})" title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </button>
                                            <button class="btn btn-danger btn-sm" onclick="eliminarCliente(${cliente.id})" title="Eliminar">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            `;
                        });
                    }
                } else {
                    mostrarNotificacion(data.message || 'Error al cargar los clientes', 'danger');
                }
            } catch (error) {
                console.error('Error al cargar clientes:', error);
                mostrarNotificacion('Error al cargar los clientes', 'danger');
                
                // Mostrar estado de error en la tabla
                const tbody = document.getElementById('clientesTableBody');
                tbody.innerHTML = `
                    <tr>
                        <td colspan="7" class="text-center py-5">
                            <div class="empty-state">
                                <i class="fas fa-exclamation-triangle fa-3x mb-3 text-danger" style="opacity: 0.5;"></i>
                                <h5>Error al cargar los datos</h5>
                                <p class="text-muted">Por favor, intenta recargar la p√°gina</p>
                                <button class="btn btn-primary btn-sm" onclick="cargarClientes()">
                                    <i class="fas fa-refresh me-1"></i>Reintentar
                                </button>
                            </div>
                        </td>
                    </tr>
                `;
            }
        }

        // Mostrar modal para crear
        function mostrarModalCrear() {
            document.getElementById('modalTitle').innerHTML = '<i class="fas fa-plus-circle"></i>Nuevo Cliente';
            document.getElementById('clienteForm').reset();
            document.getElementById('clienteForm').classList.remove('was-validated');
            document.getElementById('clienteId').value = '';
            clienteModal.show();
        }

        // Editar cliente
        async function editarCliente(id) {
            try {
                const response = await fetch(`/api/clientes/${id}`);
                const data = await response.json();
                
                if (data.success) {
                    const cliente = data.cliente;
                    document.getElementById('modalTitle').innerHTML = '<i class="fas fa-edit"></i>Editar Cliente';
                    document.getElementById('clienteId').value = cliente.id;
                    document.getElementById('rut').value = cliente.rut;
                    document.getElementById('nombre_empresa').value = cliente.nombre_empresa;
                    document.getElementById('email').value = cliente.email;
                    document.getElementById('telefono').value = cliente.telefono;
                    document.getElementById('contacto_principal').value = cliente.contacto_principal;
                    document.getElementById('direccion').value = cliente.direccion;
                    document.getElementById('comuna').value = cliente.comuna;
                    document.getElementById('ciudad').value = cliente.ciudad;
                    
                    clienteModal.show();
                } else {
                    mostrarNotificacion(data.message || 'Error al cargar los datos del cliente', 'danger');
                }
            } catch (error) {
                console.error('Error al cargar cliente:', error);
                mostrarNotificacion('Error al cargar los datos del cliente', 'danger');
            }
        }

        // Guardar cliente
        async function guardarCliente() {
            const form = document.getElementById('clienteForm');
            if (!form.checkValidity()) {
                form.classList.add('was-validated');
                return;
            }

            const clienteId = document.getElementById('clienteId').value;
            const cliente = {
                rut: document.getElementById('rut').value,
                nombreEmpresa: document.getElementById('nombre_empresa').value,
                email: document.getElementById('email').value,
                telefono: document.getElementById('telefono').value,
                contactoPrincipal: document.getElementById('contacto_principal').value,
                direccion: document.getElementById('direccion').value,
                comuna: document.getElementById('comuna').value,
                ciudad: document.getElementById('ciudad').value
            };

            try {
                const url = clienteId ? `/api/clientes/${clienteId}` : '/api/clientes';
                const method = clienteId ? 'PUT' : 'POST';
                
                const response = await fetch(url, {
                    method,
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(cliente)
                });

                const data = await response.json();
                
                if (data.success) {
                    clienteModal.hide();
                    await cargarClientes();
                    mostrarNotificacion(data.message || 'Cliente guardado exitosamente', 'success');
                    
                    // Simular nueva notificaci√≥n
                    if (!clienteId) {
                        setTimeout(() => {
                            actualizarBadgeNotificaciones(3);
                        }, 1000);
                    }
                } else {
                    mostrarNotificacion(data.message || 'Error al guardar el cliente', 'danger');
                }
            } catch (error) {
                console.error('Error al guardar cliente:', error);
                mostrarNotificacion('Error al guardar el cliente', 'danger');
            }
        }

        // Eliminar cliente
        async function eliminarCliente(id) {
            if (confirm('¬øEst√° seguro de que desea eliminar este cliente?\n\nEsta acci√≥n no se puede deshacer.')) {
                try {
                    const response = await fetch(`/api/clientes/${id}`, {
                        method: 'DELETE'
                    });

                    const data = await response.json();
                    
                    if (data.success) {
                        cargarClientes();
                        mostrarNotificacion(data.message || 'Cliente eliminado correctamente', 'success');
                    } else {
                        mostrarNotificacion(data.message || 'Error al eliminar el cliente', 'danger');
                    }
                } catch (error) {
                    console.error('Error al eliminar cliente:', error);
                    mostrarNotificacion('Error al eliminar el cliente', 'danger');
                }
            }
        }

        // Mostrar notificaci√≥n
        function mostrarNotificacion(mensaje, tipo) {
            const toast = document.getElementById('notificationToast');
            const toastBody = toast.querySelector('.toast-body');
            const toastHeader = toast.querySelector('.toast-header');
            
            toastBody.textContent = mensaje;
            
            // Limpiar clases anteriores
            toast.classList.remove('bg-success', 'bg-danger', 'bg-warning', 'bg-info');
            toastHeader.classList.remove('bg-success', 'bg-danger', 'bg-warning', 'bg-info');
            
            // Agregar clase seg√∫n el tipo
            if (tipo === 'success') {
                toastHeader.classList.add('bg-success');
                toastHeader.style.color = 'white';
            } else if (tipo === 'danger') {
                toastHeader.classList.add('bg-danger');
                toastHeader.style.color = 'white';
            } else if (tipo === 'warning') {
                toastHeader.classList.add('bg-warning');
                toastHeader.style.color = 'black';
            } else {
                toastHeader.classList.add('bg-info');
                toastHeader.style.color = 'white';
            }
            
            const bsToast = bootstrap.Toast.getInstance(toast);
            if (bsToast) {
                bsToast.show();
            } else {
                const newToast = new bootstrap.Toast(toast);
                newToast.show();
            }
        }

        // Formatear RUT autom√°ticamente
        document.addEventListener('DOMContentLoaded', function() {
            const rutInput = document.getElementById('rut');
            if (rutInput) {
                rutInput.addEventListener('input', function(e) {
                    let value = e.target.value.replace(/[^0-9kK]/g, '');
                    if (value.length === 0) {
                        e.target.value = '';
                        return;
                    }
                    // Separar n√∫mero y d√≠gito verificador
                    let numero = value.slice(0, -1);
                    let dv = value.slice(-1);
                    // Agrupar de derecha a izquierda en bloques de 3
                    let numeroFormateado = '';
                    while (numero.length > 3) {
                        numeroFormateado = '.' + numero.slice(-3) + numeroFormateado;
                        numero = numero.slice(0, -3);
                    }
                    numeroFormateado = numero + numeroFormateado;
                    // Unir con gui√≥n
                    e.target.value = numeroFormateado + '-' + dv;
                });
            }
        });
    </script>
</body>
</html>